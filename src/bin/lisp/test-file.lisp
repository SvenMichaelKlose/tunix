(or (macro? 'while)
    (load "while.lisp"))

(message "Testing OPEN file read from \"while.lisp\"...")
(let c (open "while.lisp" 'r)
  (print c)
  (terpri)
  (setin c)
  (while (not (eof))
    (out (in)))
  (setin stdin)
  (close c))
(terpri)
(message "That went well.")

(message "Testing OPEN file write to \"test.out\"...")
(let c (open "test.out" 'w)
  (setout c)
  (print "Hello world!")
  (terpri)
  (setout stdout)
  (close c))
(message "That went well.")

(message "Testing OPEN file read from \"test.out\"...")
(let c (open "test.out" 'r)
  (print c)
  (terpri)
  (setin c)
  (while (not (eof))
    (out (in)))
  (setin stdin)
  (close c))
(message "That went well.")
