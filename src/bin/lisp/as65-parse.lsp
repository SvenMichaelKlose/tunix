(load '"as65.lsp")

(var *all-mnem65* (append (apply append *mn-6502*)
                          (remove t (remove nil (apply append (remove t (remove nil (apply append *6502*))))))))

(fn labeldef? (x)
  (!= (slength x)
    (and (< 1 !)
         (== \: (char-at x (-- !))))))

(fn mnem? (x)
  (member x *all-mnem65*))

(or (mnem? 'lda)
    (error "MNEM? not working"))

(fn as65-parse ()
  (block nil
    (let (inst nil)
      (awhen (read)
        (or (symbol? !)
            (error "Symbol expected"))
        (and (labeldef? !)
             (return (. 'label !)))
        (or (mnem? !)
            (error "Menomic expected"))
        (acons! 'mnem ! inst)
        (awhen (read)
          (when (cons? !)   ; (a) / (a,x) / expr
            (and (== 2 (length !)) ; Lisp expression
                 (cons? (cadr !)) ; (a,x) -> (a (quote x))
                 (eq 'unquote (car (cadr !)))
                 (eq 'x (cadr (cadr !)))
                 (return (. (. 'mode 'indx)
                            (. (. 'op (car !))
                               inst))))
            (acons! 'mode 'ind inst)
            (acons! 'op ! inst))
          (unless (cons? !)
            (acons! 'op ! inst))
          (awhen (read)
            (or (eq 'unquote (car !))
                (error "QUOTE or eol"))
            (!= (cadr !)
              (or (eq 'x !)
                  (eq 'y !)
                  (error ",x or ,x!"))
              (acons! 'absr ! inst))))
        inst))))
