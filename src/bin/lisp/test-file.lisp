(or (macro? 'while)
    (load "while.lisp"))

(fn print-channel (x)
  (out "(Channel ")(print x)(out ")")(terpri))

(message "Testing OPEN file read from \"while.lisp\"...")
(let c (open "while.lisp" 'r)
  (print-channel c)
  (setin c)
  (while (not (eof))
    (out (in)))
  (close c)
  (setin stdin))
(message "Done.")(terpri)

;(message "Testing OPEN on missing file...")
;(and (open "k87sfdasdj9" 'r)
     ;(error))

(message "Testing OPEN file write to \"test.out\"...")
(let c (open "test.out" 'w)
  (print-channel c)
  (setout c)
  (print "Hello world!")
  (terpri)
  (close c)
  (setin stdin))
(message "Done.")(terpri)

(message "Testing OPEN file read from \"test.out\"...")
(let c (open "test.out" 'r)
  (print-channel c)
  (setin c)
  (while (not (eof))
    (out (in)))
  (close c)
  (setin stdin))
(message "Done.")(terpri)
